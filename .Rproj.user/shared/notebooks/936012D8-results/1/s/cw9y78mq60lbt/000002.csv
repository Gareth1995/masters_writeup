"0","knitr::opts_chunk$set(echo = FALSE)"
"0","knitr::opts_chunk$set(message = FALSE)"
"0","knitr::opts_chunk$set(results = 'hide')"
"0","knitr::opts_chunk$set(warning = FALSE)"
"0","knitr::opts_chunk$set(fig.keep = 'all')"
"0","#knitr::opts_chunk$set(fig.pos = 'H')"
"0","knitr::opts_chunk$set(fig.pos = ""!H"", out.extra = """")"
"0",""
"0","library(cowplot)"
"2","Registered S3 methods overwritten by 'tibble':
  method     from  
  format.tbl pillar
  print.tbl  pillar
"
"0","library(ggplot2)"
"2","package ‘ggplot2’ was built under R version 4.0.5"
"0","source(""R/cwac_functions.r"")"
"2","package ‘lubridate’ was built under R version 4.0.5"
"2","
Attaching package: ‘lubridate’

"
"2","The following object is masked from ‘package:cowplot’:

    stamp

"
"2","The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

"
"2","
Attaching package: ‘dplyr’

"
"2","The following objects are masked from ‘package:stats’:

    filter, lag

"
"2","The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

"
"2","package ‘jagsUI’ was built under R version 4.0.5"
"2","Loading required package: lattice
"
"2","
Attaching package: ‘jagsUI’

"
"2","The following object is masked from ‘package:utils’:

    View

"
"2","
Attaching package: ‘gridExtra’

"
"2","The following object is masked from ‘package:dplyr’:

    combine

"
"2","Loading required package: RCurl
"
"2","
Attaching package: ‘RCurl’

"
"2","The following object is masked from ‘package:tidyr’:

    complete

"
"2","Loading required package: rjson
"
"0","library(knitr)"
"0","library(vegan)"
"2","package ‘vegan’ was built under R version 4.0.5"
"2","Loading required package: permute
"
"2","package ‘permute’ was built under R version 4.0.5"
"2","This is vegan 2.5-7
"
"0","library(tidyverse)"
"2","Registered S3 methods overwritten by 'dbplyr':
  method         from
  print.tbl_lazy     
  print.tbl_sql      
"
"2","[30m-- [1mAttaching packages[22m ----------------------------------------- tidyverse 1.3.0 --[39m
"
"2","[30m[32mv[30m [34mtibble [30m 3.0.1     [32mv[30m [34mstringr[30m 1.4.0
[32mv[30m [34mreadr  [30m 1.3.1     [32mv[30m [34mforcats[30m 0.5.0
[32mv[30m [34mpurrr  [30m 0.3.4     [39m
"
"2","[30m-- [1mConflicts[22m -------------------------------------------- tidyverse_conflicts() --
[31mx[30m [34mlubridate[30m::[32mas.difftime()[30m masks [34mbase[30m::as.difftime()
[31mx[30m [34mgridExtra[30m::[32mcombine()[30m     masks [34mdplyr[30m::combine()
[31mx[30m [34mRCurl[30m::[32mcomplete()[30m        masks [34mtidyr[30m::complete()
[31mx[30m [34mlubridate[30m::[32mdate()[30m        masks [34mbase[30m::date()
[31mx[30m [34mdplyr[30m::[32mfilter()[30m          masks [34mstats[30m::filter()
[31mx[30m [34mlubridate[30m::[32mintersect()[30m   masks [34mbase[30m::intersect()
[31mx[30m [34mdplyr[30m::[32mlag()[30m             masks [34mstats[30m::lag()
[31mx[30m [34mlubridate[30m::[32msetdiff()[30m     masks [34mbase[30m::setdiff()
[31mx[30m [34mlubridate[30m::[32mstamp()[30m       masks [34mcowplot[30m::stamp()
[31mx[30m [34mlubridate[30m::[32munion()[30m       masks [34mbase[30m::union()[39m
"
"0","library(cowplot)"
"0","#"
"0","# load relevant data"
"0","load('data/robertsDB.RData')"
"0","load('data/barberspan.counts.RData')"
"0",""
"0","birdcnts <- bp_counts[,1:103]"
"0",""
"0","# counting all the observations with 0 count"
"0","barbernas <- apply(birdcnts, 2, function(x){"
"0","  return(x==0)"
"0","})"
"0","barbernas"
"1","     "
"1","     4"
"1","     6"
"1","    41"
"1","    42"
"1","    47"
"1","    50"
"1","    52"
"1","    54"
"1","    55"
"1","    56"
"1","    58"
"1","    59"
"1","
 [1,]"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","
 [2,]"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","
 [3,]"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","
 [4,]"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","
 [5,]"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","
 [6,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [7,]"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","
 [8,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [9,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
"
"1","     "
"1","    61"
"1","    76"
"1","    85"
"1","    86"
"1","    87"
"1","    88"
"1","    89"
"1","    90"
"1","    94"
"1","    96"
"1","    97"
"1","    99"
"1","
 [1,]"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","
 [2,]"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","
 [3,]"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","
 [4,]"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","
 [5,]"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","
 [6,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [7,]"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","
 [8,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [9,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
"
"1","     "
"1","   102"
"1","   212"
"1","   233"
"1","   235"
"1","   237"
"1","   238"
"1","   240"
"1","   245"
"1","   253"
"1","   255"
"1","   256"
"1","   258"
"1","
 [1,]"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","
 [2,]"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [3,]"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","
 [4,]"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","
 [5,]"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [6,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [7,]"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","
 [8,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [9,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
"
"1","     "
"1","   262"
"1","   264"
"1","   288"
"1","   290"
"1","   360"
"1","   361"
"1","   686"
"1","     5"
"1","    98"
"1","   100"
"1","   208"
"1","   210"
"1","
 [1,]"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [2,]"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","
 [3,]"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [4,]"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","
 [5,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1"," FALSE"
"1","
 [6,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [7,]"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [8,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [9,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
"
"1","     "
"1","   236"
"1","   250"
"1","    80"
"1","    60"
"1","    64"
"1","    84"
"1","    91"
"1","   265"
"1","   926"
"1","    81"
"1","   149"
"1","   263"
"1","
 [1,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [2,]"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [3,]"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [4,]"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","
 [5,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [6,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [7,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [8,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [9,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
"
"1","     "
"1","   269"
"1","   270"
"1","   251"
"1","   267"
"1","    57"
"1","    62"
"1","    67"
"1","   101"
"1","   103"
"1","   304"
"1","   394"
"1","    72"
"1","
 [1,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [2,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [3,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [4,]"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [5,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [6,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [7,]"
"1","  TRUE"
"1"," FALSE"
"1"," FALSE"
"1"," FALSE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [8,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [9,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
"
"1","     "
"1","    69"
"1","    83"
"1","   228"
"1","   933"
"1","   203"
"1","   305"
"1","   241"
"1","   685"
"1","    95"
"1","   104"
"1","   266"
"1","   282"
"1","
 [1,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [2,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [3,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [4,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [5,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [6,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [7,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [8,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [9,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
"
"1","     "
"1","   197"
"1","   239"
"1","   689"
"1","   211"
"1"," 10015"
"1","   268"
"1","    70"
"1","   167"
"1","   257"
"1","    63"
"1","   274"
"1","   397"
"1","
 [1,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [2,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [3,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [4,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [5,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [6,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [7,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [8,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [9,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
"
"1","     "
"1","   170"
"1","   172"
"1","   232"
"1","    48"
"1","   259"
"1","   690"
"1","  1016"
"1","
 [1,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [2,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [3,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [4,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [5,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [6,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [7,]"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","  TRUE"
"1","
 [8,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
 [9,]"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","    NA"
"1","
"
"1"," [ reached getOption(""max.print"") -- omitted 43 rows ]
"
"0","barber0s = apply(barbernas, 2, sum, na.rm = T) # sum the number of 0 counts per bird"
"0","less13 = names(barber0s[barber0s>19]) # extract names of the birds with 13 or more counts"
"0",""
"0","#df <- robertsDB %>% select(everything())"
"0","newRobert <- robertsDB[!robertsDB$SppRef %in% less13,] # extract only species with 13 or more counts"
"0",""
"0","# separate into resident and migrant"
"0","resid <- newRobert %>%"
"0","  filter(Migrant==""n"") %>%"
"0","  select(SppRef)"
"0",""
"0","migid <- newRobert %>%"
"0","  filter(Migrant==""y"") %>%"
"0","  select(SppRef)"
"0",""
"0","residents <- birdcnts[,resid$SppRef]"
"0","migrants <- birdcnts[,migid$SppRef]"
"0",""
"0",""
